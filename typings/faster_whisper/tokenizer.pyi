"""
This type stub file was generated by pyright.
"""

import tokenizers
from functools import cached_property
from typing import List, Optional, Tuple

class Tokenizer:
    """Simple wrapper around a tokenizers.Tokenizer."""
    def __init__(self, tokenizer: tokenizers.Tokenizer, multilingual: bool, task: Optional[str] = ..., language: Optional[str] = ...) -> None:
        ...
    
    @cached_property
    def transcribe(self) -> int:
        ...
    
    @cached_property
    def translate(self) -> int:
        ...
    
    @cached_property
    def sot(self) -> int:
        ...
    
    @cached_property
    def sot_lm(self) -> int:
        ...
    
    @cached_property
    def sot_prev(self) -> int:
        ...
    
    @cached_property
    def eot(self) -> int:
        ...
    
    @cached_property
    def no_timestamps(self) -> int:
        ...
    
    @property
    def timestamp_begin(self) -> int:
        ...
    
    @property
    def sot_sequence(self) -> List[int]:
        ...
    
    def encode(self, text: str) -> List[int]:
        ...
    
    def decode(self, tokens: List[int]) -> str:
        ...
    
    def decode_with_timestamps(self, tokens: List[int]) -> str:
        ...
    
    @cached_property
    def non_speech_tokens(self) -> Tuple[int]:
        """
        Returns the list of tokens to suppress in order to avoid any speaker tags or non-speech
        annotations, to prevent sampling texts that are not actually spoken in the audio, e.g.

        - ♪♪♪
        - ( SPEAKING FOREIGN LANGUAGE )
        - [DAVID] Hey there,

        keeping basic punctuations like commas, periods, question marks, exclamation points, etc.
        """
        ...
    
    def split_to_word_tokens(self, tokens: List[int]) -> Tuple[List[str], List[List[int]]]:
        ...
    
    def split_tokens_on_unicode(self, tokens: List[int]) -> Tuple[List[str], List[List[int]]]:
        ...
    
    def split_tokens_on_spaces(self, tokens: List[int]) -> Tuple[List[str], List[List[int]]]:
        ...
    


_TASKS = ...
_LANGUAGE_CODES = ...
